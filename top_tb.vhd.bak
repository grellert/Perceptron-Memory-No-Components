library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use std.textio.all;
use ieee.std_logic_textio.all;  -- para tratamento de arquivos e texto -> file_open...
entity top_tb is
end top_tb;

architecture tb of top_tb is
    constant clk_period: time := 20 ns;
    signal clk, rst : std_logic;
    signal A, B: std_logic_vector(3 downto 0);
    signal S: std_logic_vector(4 downto 0);

begin
    -- conectando os sinais do test bench aos sinais do contador
    UUT : entity work.top port map 
                (clk => clk, rst => rst, 
                A => A, B => B, S => S);

    rst <= '1', '0' after clk_period/2;
     
     -- processo gerador de clock
    clk_gen : process
        begin
            clk <= '1';
            wait for clk_period/2; -- 50% do periodo pra cada nivel
            clk <= '0';
            wait for clk_period/2;
        end process;

    -- processo de leitura das entradas e escrita saidas
    file_io: process
        variable read_col_from_input_buf : line; -- buffers de entrada e saida
        file input_buf : text;  -- text is keyword
        variable write_col_to_output_buf : line; 
        file output_buf : text;  -- text is keyword
        variable val_A, val_B: std_logic_vector(3 downto 0); -- entradas A e B do arquivo de entrada do tb
        variable val_SPACE : character;  -- para espacos na leitura de cada linha da entrada
    
        begin
            --arquivo de entrada do tb
            file_open(input_buf, "C:\Users\luisa\Documents\Materias\UFSC\20201\Sistemas digitais - INE5406 - 05235A\LAB Sist digitais\Python + testbench\ine5406-sistema-verificacao\entradas.txt",  read_mode); -- lê arquivo de entrada
            --arquivo de saída do tb
            file_open(output_buf, "C:\Users\luisa\Documents\Materias\UFSC\20201\Sistemas digitais - INE5406 - 05235A\LAB Sist digitais\Python + testbench\ine5406-sistema-verificacao\saidas_tb.txt",  write_mode); -- lê arquivo de saída
            wait until rst = '0'; -- espera reset desligar
            
            --Loop principal
            while not endfile(input_buf) loop --enquanto arquivo não terminar de ler
                readline(input_buf, read_col_from_input_buf); --lê_linha buffer primeira linha -> escreve na variável
                read(read_col_from_input_buf, val_A); --pega primeiros 4 bits
                read(read_col_from_input_buf, val_SPACE);           -- read in the space character
                read(read_col_from_input_buf, val_B);-- pega os últimos 4 bits

                -- Pass the read values to signals
                A <= val_A;
                B <= val_B;
                wait for clk_period;
                write(write_col_to_output_buf, S);
                writeline(output_buf, write_col_to_output_buf);    -- 
            end loop;
            write(write_col_to_output_buf, string'("SIMULACAO CONCLUIDA")); -- só pra confirmar que saiu do loop, tudo ok
            writeline(output_buf, write_col_to_output_buf);    -- 
            file_close(input_buf); --fecha leitura arquivos
            file_close(output_buf); --fecha arquivos
            wait; --sem ele nd funciona; pq?
        end process;
end tb;
